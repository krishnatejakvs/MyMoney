plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.kt.navi'
version = '0.0.1-SNAPSHOT'
// sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.7.4")
	set('springShellVersion', "2.1.3")
}

dependencies {
	// This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
	implementation 'de.codecentric:spring-boot-admin-starter-server'
	implementation 'org.springframework.shell:spring-shell-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/dto/**', '**/enums/**',
                              '**/config/**', '**/constant/**', '**/entity/**'
                    ])
        }))
    }
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
